{"remainingRequest":"/vagrant/snail-x-core-vue/node_modules/babel-loader/lib/index.js!/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/vagrant/snail-x-core-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/vagrant/snail-x-core-vue/src/components/auth/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/vagrant/snail-x-core-vue/src/components/auth/Register.vue","mtime":1539187047788},{"path":"/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539182162602},{"path":"/vagrant/snail-x-core-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539182162602},{"path":"/vagrant/snail-x-core-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Register',\n  data: function data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    checkForm: function checkForm(e) {\n      this.errors = [];\n\n      if (this.firstName.length > 100) {\n        this.errors.push(\"First name exceeds maximum 100-character limit.\");\n      }\n\n      if (!this.firstName) {\n        this.errors.push(\"First name is required.\");\n      }\n\n      if (this.lastName.length > 100) {\n        this.errors.push(\"Last name exceeds maximum 100-character limit.\");\n      }\n\n      if (!this.lastName) {\n        this.errors.push(\"Last name is required.\");\n      }\n\n      if (this.email.length > 100) {\n        this.errors.push(\"Email exceeds maximum 100-character limit.\");\n      }\n\n      if (!this.email) {\n        this.errors.push(\"Email is required.\");\n      } else if (!this.validEmail(this.email)) {\n        this.errors.push('Valid email required.');\n      }\n\n      if (this.password.length > 100) {\n        this.errors.push(\"Password exceeds maximum 100-character limit.\");\n      }\n\n      if (!this.password) {\n        this.errors.push(\"Password is required.\");\n      }\n\n      if (!this.errors.length) {\n        return true;\n      }\n\n      e.preventDefault();\n    },\n    validEmail: function validEmail(email) {\n      var re = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b/;\n      return re.test(email);\n    },\n    register: function register() {\n      var _this = this;\n\n      this.$store.dispatch('registerUser', {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        password: this.password\n      }).then(function () {\n        _this.$router.push({\n          name: 'login'\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,eAAA;AACA,QAAA,UADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,iBAAA,EADA;AAEA,gBAAA,EAFA;AAGA,aAAA,EAHA;AAIA,gBAAA;AAJA,KAAA;AAMA,GATA;AAUA,WAAA;AACA,eAAA,mBAAA,CAAA,EAAA;AACA,WAAA,MAAA,GAAA,EAAA;;AACA,UAAA,KAAA,SAAA,CAAA,MAAA,GAAA,GAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,iDAAA;AACA;;AACA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,yBAAA;AACA;;AAEA,UAAA,KAAA,QAAA,CAAA,MAAA,GAAA,GAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,gDAAA;AACA;;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,wBAAA;AACA;;AAEA,UAAA,KAAA,KAAA,CAAA,MAAA,GAAA,GAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,4CAAA;AACA;;AACA,UAAA,CAAA,KAAA,KAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,oBAAA;AACA,OAFA,MAEA,IAAA,CAAA,KAAA,UAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,uBAAA;AACA;;AAEA,UAAA,KAAA,QAAA,CAAA,MAAA,GAAA,GAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,+CAAA;AACA;;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,uBAAA;AACA;;AAEA,UAAA,CAAA,KAAA,MAAA,CAAA,MAAA,EAAA;AACA,eAAA,IAAA;AACA;;AAEA,QAAA,cAAA;AACA,KAtCA;AAuCA,gBAAA,oBAAA,KAAA,EAAA;AACA,UAAA,KAAA,oDAAA;AACA,aAAA,GAAA,IAAA,CAAA,KAAA,CAAA;AACA,KA1CA;AA2CA,YA3CA,sBA2CA;AAAA;;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA;AACA,mBAAA,KAAA,SADA;AAEA,kBAAA,KAAA,QAFA;AAGA,eAAA,KAAA,KAHA;AAIA,kBAAA,KAAA;AAJA,OAAA,EAMA,IANA,CAMA,YAAA;AACA,cAAA,OAAA,CAAA,IAAA,CAAA;AAAA,gBAAA;AAAA,SAAA;AACA,OARA;AASA;AArDA;AAVA,CAAA","sourcesContent":["<template>\n    <div id=\"register\">\n        <form id=\"reg\"\n              @submit=\"checkForm\"\n              action=\"register()\"\n              method=\"post\">\n              <!--novalidate=\"true\"-->\n\n            <h3 class=\"page-title\">Register</h3>\n            <hr>\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" name=\"firstName\" v-model=\"firstName\"\n                       placeholder=\"First Name\" required/>\n                <input type=\"text\" class=\"form-control\" name=\"lastName\" v-model=\"lastName\"\n                       placeholder=\"Last Name\" required/>\n                <input type=\"email\" class=\"form-control\" name=\"email\" v-model=\"email\"\n                       placeholder=\"Email\" required/>\n                <input type=\"password\" class=\"form-control\" name=\"password\" v-model=\"password\"\n                       placeholder=\"Password\" required/>\n                <button style=\"float: right;\" type=\"button\" class=\"btn btn-primary\" @click=\"register()\">Register\n                </button>\n                <button style=\"margin-right: 1em; float: right\" type=\"button\" class=\"btn btn-warning\"\n                        onclick=\"window.history.back()\">Back\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'Register',\n        data() {\n            return {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                password: \"\"\n            }\n        },\n        methods: {\n            checkForm: function (e) {\n                this.errors = [];\n                if (this.firstName.length > 100) {\n                    this.errors.push(\"First name exceeds maximum 100-character limit.\")\n                }\n                if (!this.firstName) {\n                    this.errors.push(\"First name is required.\");\n                }\n\n                if (this.lastName.length > 100) {\n                    this.errors.push(\"Last name exceeds maximum 100-character limit.\")\n                }\n                if (!this.lastName) {\n                    this.errors.push(\"Last name is required.\");\n                }\n\n                if (this.email.length > 100) {\n                    this.errors.push(\"Email exceeds maximum 100-character limit.\")\n                }\n                if (!this.email) {\n                    this.errors.push(\"Email is required.\");\n                } else if (!this.validEmail(this.email)) {\n                    this.errors.push('Valid email required.');\n                }\n\n                if (this.password.length > 100) {\n                    this.errors.push(\"Password exceeds maximum 100-character limit.\")\n                }\n                if (!this.password) {\n                    this.errors.push(\"Password is required.\")\n                }\n\n                if (!this.errors.length) {\n                    return true;\n                }\n\n                e.preventDefault();\n            },\n            validEmail: function (email) {\n                const re = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b/;\n                return re.test(email);\n            },\n            register() {\n                this.$store.dispatch('registerUser', {\n                    firstName: this.firstName,\n                    lastName: this.lastName,\n                    email: this.email,\n                    password: this.password\n                })\n                    .then(() => {\n                        this.$router.push({name: 'login'})\n                    })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #register {\n        position: fixed;\n        top: 10%;\n        left: 11%;\n        width: 50%;\n        border: 1px solid grey;\n        background-color: #FFFFFF;\n        margin: 10em;\n        padding: 20px;\n    }\n\n    input {\n        margin-bottom: 1em;\n    }\n\n    input:invalid {\n      border: 2px dashed red;\n    }\n\n    input:valid {\n      border: 2px solid black;\n    }\n</style>"],"sourceRoot":"src/components/auth"}]}