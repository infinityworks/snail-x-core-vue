{"remainingRequest":"/vagrant/snail-x-core-vue/node_modules/babel-loader/lib/index.js!/vagrant/snail-x-core-vue/node_modules/eslint-loader/index.js??ref--13-0!/vagrant/snail-x-core-vue/src/store/store.js","dependencies":[{"path":"/vagrant/snail-x-core-vue/src/store/store.js","mtime":1539267075281},{"path":"/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539183672852},{"path":"/vagrant/snail-x-core-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/vagrant/snail-x-core-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport var store = new Vuex.Store({\n  state: {\n    user: localStorage.getItem('user_email') || null\n  },\n  getters: {\n    loggedIn: function loggedIn(state) {\n      return state.user !== null;\n    },\n    userEmail: function userEmail(state) {\n      return state.user;\n    }\n  },\n  actions: {\n    loginUser: function loginUser(context, credentials) {\n      return new Promise(function (resolve, reject) {\n        axios.post('http://127.0.0.1:5000/login-user', {\n          username: credentials.username,\n          password: credentials.password\n        }).then(function (response) {\n          var user_email = response.data;\n          localStorage.setItem('user_email', user_email);\n          context.commit('loginUser', user_email);\n          resolve(response);\n        }).catch(function (error) {\n          console.log(error);\n          reject(error);\n        });\n      });\n    },\n    registerUser: function registerUser(context, credentials) {\n      return new Promise(function (resolve, reject) {\n        axios.post('http://127.0.0.1:5000/register-user', {\n          firstName: credentials.firstName,\n          lastName: credentials.lastName,\n          email: credentials.email,\n          password: credentials.password\n        }).then(function (response) {\n          alert(\"yo\");\n          resolve(response);\n        }).catch(function (error) {\n          console.log(error);\n          reject(error);\n        });\n      });\n    },\n    emailInDB: function emailInDB(context, credentials) {\n      return new Promise(function (resolve, reject) {\n        axios.post('http://127.0.0.1:5000/check-duplicate-email', {\n          email: credentials.email\n        }).then(function (response) {\n          return resolve(response.data);\n        }).catch(function (error) {\n          console.log(error);\n          reject(error);\n        });\n      });\n    }\n  }\n});",{"version":3,"sources":["/vagrant/snail-x-core-vue/src/store/store.js"],"names":["Vue","Vuex","axios","use","store","Store","state","user","localStorage","getItem","getters","loggedIn","userEmail","actions","loginUser","context","credentials","Promise","resolve","reject","post","username","password","then","user_email","response","data","setItem","commit","catch","console","log","error","registerUser","firstName","lastName","email","alert","emailInDB"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,IAAIG,GAAJ,CAAQF,IAAR;AAEA,OAAO,IAAMG,QAAQ,IAAIH,KAAKI,KAAT,CAAe;AAChCC,SAAO;AACHC,UAAMC,aAAaC,OAAb,CAAqB,YAArB,KAAsC;AADzC,GADyB;AAIhCC,WAAS;AACLC,YADK,oBACIL,KADJ,EACW;AACZ,aAAOA,MAAMC,IAAN,KAAe,IAAtB;AACH,KAHI;AAILK,aAJK,qBAIKN,KAJL,EAIY;AACb,aAAOA,MAAMC,IAAb;AACH;AANI,GAJuB;AAYhCM,WAAS;AACLC,aADK,qBACKC,OADL,EACcC,WADd,EAC2B;AAC5B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCjB,cAAMkB,IAAN,CAAW,kCAAX,EAA+C;AAC3CC,oBAAUL,YAAYK,QADqB;AAE3CC,oBAAUN,YAAYM;AAFqB,SAA/C,EAIKC,IAJL,CAIU,oBAAY;AACd,cAAMC,aAAaC,SAASC,IAA5B;AACAlB,uBAAamB,OAAb,CAAqB,YAArB,EAAmCH,UAAnC;AACAT,kBAAQa,MAAR,CAAe,WAAf,EAA4BJ,UAA5B;AACAN,kBAAQO,QAAR;AACH,SATL,EAUKI,KAVL,CAUW,iBAAS;AACZC,kBAAQC,GAAR,CAAYC,KAAZ;AACAb,iBAAOa,KAAP;AACH,SAbL;AAcH,OAfM,CAAP;AAgBH,KAlBI;AAmBLC,gBAnBK,wBAmBQlB,OAnBR,EAmBiBC,WAnBjB,EAmB8B;AAC/B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCjB,cAAMkB,IAAN,CAAW,qCAAX,EAAkD;AAC9Cc,qBAAWlB,YAAYkB,SADuB;AAE9CC,oBAAUnB,YAAYmB,QAFwB;AAG9CC,iBAAOpB,YAAYoB,KAH2B;AAI9Cd,oBAAUN,YAAYM;AAJwB,SAAlD,EAMKC,IANL,CAMU,oBAAY;AACdc,gBAAM,IAAN;AACAnB,kBAAQO,QAAR;AACH,SATL,EAUKI,KAVL,CAUW,iBAAS;AACZC,kBAAQC,GAAR,CAAYC,KAAZ;AACAb,iBAAOa,KAAP;AACH,SAbL;AAcH,OAfM,CAAP;AAgBH,KApCI;AAqCLM,eAAW,mBAAUvB,OAAV,EAAmBC,WAAnB,EAAgC;AACvC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCjB,cAAMkB,IAAN,CAAW,6CAAX,EAA0D;AACtDgB,iBAAOpB,YAAYoB;AADmC,SAA1D,EAGKb,IAHL,CAGU,oBAAY;AACd,iBAAOL,QAAQO,SAASC,IAAjB,CAAP;AACH,SALL,EAMKG,KANL,CAMW,iBAAS;AACZC,kBAAQC,GAAR,CAAYC,KAAZ;AACAb,iBAAOa,KAAP;AACH,SATL;AAUH,OAXM,CAAP;AAYH;AAlDI;AAZuB,CAAf,CAAd","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex);\n\nexport const store = new Vuex.Store({\n    state: {\n        user: localStorage.getItem('user_email') || null,\n    },\n    getters: {\n        loggedIn(state) {\n            return state.user !== null\n        },\n        userEmail(state) {\n            return state.user\n        }\n    },\n    actions: {\n        loginUser(context, credentials) {\n            return new Promise((resolve, reject) => {\n                axios.post('http://127.0.0.1:5000/login-user', {\n                    username: credentials.username,\n                    password: credentials.password\n                })\n                    .then(response => {\n                        const user_email = response.data;\n                        localStorage.setItem('user_email', user_email);\n                        context.commit('loginUser', user_email);\n                        resolve(response);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        reject(error);\n                    })\n            })\n        },\n        registerUser(context, credentials) {\n            return new Promise((resolve, reject) => {\n                axios.post('http://127.0.0.1:5000/register-user', {\n                    firstName: credentials.firstName,\n                    lastName: credentials.lastName,\n                    email: credentials.email,\n                    password: credentials.password\n                })\n                    .then(response => {\n                        alert(\"yo\")\n                        resolve(response);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        reject(error);\n                    })\n            })\n        },\n        emailInDB: function (context, credentials) {\n            return new Promise((resolve, reject) => {\n                axios.post('http://127.0.0.1:5000/check-duplicate-email', {\n                    email: credentials.email\n                })\n                    .then(response => {\n                        return resolve(response.data);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        reject(error);\n                    })\n            })\n        }\n    }\n});"]}]}