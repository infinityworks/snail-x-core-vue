{"remainingRequest":"/vagrant/snail-x-core-vue/node_modules/babel-loader/lib/index.js!/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/vagrant/snail-x-core-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/vagrant/snail-x-core-vue/src/components/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/vagrant/snail-x-core-vue/src/components/auth/Login.vue","mtime":1539246353381},{"path":"/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539250548750},{"path":"/vagrant/snail-x-core-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539250548750},{"path":"/vagrant/snail-x-core-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Login',\n  data: function data() {\n    return {\n      username: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      if (this.username !== \"\" && this.password !== \"\" && this.username.length < 100 && this.password.length < 100) {\n        this.$store.dispatch('loginUser', {\n          username: this.username,\n          password: this.password\n        }).then(function () {\n          _this.$router.push({\n            name: 'home'\n          });\n        }).catch(function (err) {\n          alert(err);\n        });\n      } else {\n        alert(\"Please enter a username and password of valid length (0 to 100 chars)\");\n      }\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,eAAA;AACA,QAAA,OADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,gBAAA,EADA;AAEA,gBAAA;AAFA,KAAA;AAIA,GAPA;AAQA,WAAA;AACA,SADA,mBACA;AAAA;;AACA,UAAA,KAAA,QAAA,KAAA,EAAA,IAAA,KAAA,QAAA,KAAA,EAAA,IAAA,KAAA,QAAA,CAAA,MAAA,GAAA,GAAA,IAAA,KAAA,QAAA,CAAA,MAAA,GAAA,GAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,WAAA,EAAA;AACA,oBAAA,KAAA,QADA;AAEA,oBAAA,KAAA;AAFA,SAAA,EAIA,IAJA,CAIA,YAAA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,kBAAA;AAAA,WAAA;AACA,SANA,EAOA,KAPA,CAOA,eAAA;AACA,gBAAA,GAAA;AACA,SATA;AAUA,OAXA,MAWA;AACA,cAAA,uEAAA;AACA;AACA;AAhBA;AARA,CAAA","sourcesContent":["<template>\n    <div id=\"login\">\n        <h3 class=\"page-title\">Login</h3>\n        <hr>\n        <form action=\"#\" @submit.prevent=\"login\">\n            <input class=\"form-control\" type=\"text\" name=\"username\"\n                   v-model=\"username\" placeholder=\"Username\"/>\n            <input class=\"form-control\" type=\"password\" name=\"password\"\n                   v-model=\"password\" placeholder=\"Password\"/>\n            <button style=\"float: right\" class=\"btn btn-primary\" type=\"button\" @click=\"login()\">Login</button>\n            <button style=\"margin-right: 1em; float: right\" type=\"button\" class=\"btn btn-warning\"\n                    onclick=\"window.history.back()\">Back\n            </button>\n        </form>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'Login',\n        data() {\n            return {\n                username: \"\",\n                password: \"\"\n            }\n        },\n        methods: {\n            login() {\n                if (this.username !== \"\" && this.password !== \"\" && this.username.length < 100 && this.password.length < 100) {\n                    this.$store.dispatch('loginUser', {\n                        username: this.username,\n                        password: this.password,\n                    })\n                        .then(() => {\n                            this.$router.push({name: 'home'})\n                        })\n                        .catch(err => {\n                            alert(err);\n                        })\n                } else {\n                    alert(\"Please enter a username and password of valid length (0 to 100 chars)\");\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #login {\n        position: fixed;\n        left: 24.5%;\n        top: 15%;\n        width: 50%;\n        border: 1px solid grey;\n        background-color: white;\n        margin: 200px auto auto;\n        padding: 20px;\n    }\n\n    input {\n        margin-bottom: 1em;\n    }\n</style>"],"sourceRoot":"src/components/auth"}]}