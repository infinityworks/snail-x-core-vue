{"remainingRequest":"/vagrant/snail-x-core-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/vagrant/snail-x-core-vue/src/components/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/vagrant/snail-x-core-vue/src/components/auth/Login.vue","mtime":1539246353381},{"path":"/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539250548750},{"path":"/vagrant/snail-x-core-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539250548750},{"path":"/vagrant/snail-x-core-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'Login',\n    data() {\n        return {\n            username: \"\",\n            password: \"\"\n        }\n    },\n    methods: {\n        login() {\n            if (this.username !== \"\" && this.password !== \"\" && this.username.length < 100 && this.password.length < 100) {\n                this.$store.dispatch('loginUser', {\n                    username: this.username,\n                    password: this.password,\n                })\n                    .then(() => {\n                        this.$router.push({name: 'home'})\n                    })\n                    .catch(err => {\n                        alert(err);\n                    })\n            } else {\n                alert(\"Please enter a username and password of valid length (0 to 100 chars)\");\n            }\n        }\n    }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n    <div id=\"login\">\n        <h3 class=\"page-title\">Login</h3>\n        <hr>\n        <form action=\"#\" @submit.prevent=\"login\">\n            <input class=\"form-control\" type=\"text\" name=\"username\"\n                   v-model=\"username\" placeholder=\"Username\"/>\n            <input class=\"form-control\" type=\"password\" name=\"password\"\n                   v-model=\"password\" placeholder=\"Password\"/>\n            <button style=\"float: right\" class=\"btn btn-primary\" type=\"button\" @click=\"login()\">Login</button>\n            <button style=\"margin-right: 1em; float: right\" type=\"button\" class=\"btn btn-warning\"\n                    onclick=\"window.history.back()\">Back\n            </button>\n        </form>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'Login',\n        data() {\n            return {\n                username: \"\",\n                password: \"\"\n            }\n        },\n        methods: {\n            login() {\n                if (this.username !== \"\" && this.password !== \"\" && this.username.length < 100 && this.password.length < 100) {\n                    this.$store.dispatch('loginUser', {\n                        username: this.username,\n                        password: this.password,\n                    })\n                        .then(() => {\n                            this.$router.push({name: 'home'})\n                        })\n                        .catch(err => {\n                            alert(err);\n                        })\n                } else {\n                    alert(\"Please enter a username and password of valid length (0 to 100 chars)\");\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #login {\n        position: fixed;\n        left: 24.5%;\n        top: 15%;\n        width: 50%;\n        border: 1px solid grey;\n        background-color: white;\n        margin: 200px auto auto;\n        padding: 20px;\n    }\n\n    input {\n        margin-bottom: 1em;\n    }\n</style>"]}]}