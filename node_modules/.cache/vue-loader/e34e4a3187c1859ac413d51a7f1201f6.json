{"remainingRequest":"/vagrant/snail-x-core-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/vagrant/snail-x-core-vue/src/components/auth/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/vagrant/snail-x-core-vue/src/components/auth/Register.vue","mtime":1539246329069},{"path":"/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539250548750},{"path":"/vagrant/snail-x-core-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/vagrant/snail-x-core-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539250548750},{"path":"/vagrant/snail-x-core-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'Register',\n    data() {\n        return {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\"\n        }\n    },\n    methods: {\n        checkForm: function (e) {\n            this.errors = [];\n\n            if (!this.name) {\n                this.errors.push(\"Name required.\");\n            }\n            if (!this.email) {\n                this.errors.push('Email required.');\n            } else if (!this.validEmail(this.email)) {\n                this.errors.push('Valid email required.');\n            }\n\n            if (!this.errors.length) {\n                return true;\n            }\n\n            e.preventDefault();\n        },\n        validEmail: function (email) {\n            const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return re.test(email);\n        },\n        register() {\n            this.$store.dispatch('registerUser', {\n                firstName: this.firstName,\n                lastName: this.lastName,\n                email: this.email,\n                password: this.password\n            })\n                .then(() => {\n                    this.$router.push({name: 'login'})\n                })\n        }\n    }\n}\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n    <div id=\"register\">\n        <form id=\"reg\"\n              @submit=\"checkForm\"\n              action=\"register()\"\n              method=\"post\"\n              novalidate=\"true\">\n\n            <h3 class=\"page-title\">Register</h3>\n            <hr>\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" name=\"firstName\" v-model=\"firstName\"\n                       placeholder=\"First Name\"/>\n                <input type=\"text\" class=\"form-control\" name=\"lastName\" v-model=\"lastName\"\n                       placeholder=\"Last Name\"/>\n                <input type=\"email\" class=\"form-control\" name=\"email\" v-model=\"email\"\n                       placeholder=\"Email\"/>\n                <input type=\"password\" class=\"form-control\" name=\"password\" v-model=\"password\"\n                       placeholder=\"Password\"/>\n                <button style=\"float: right;\" type=\"button\" class=\"btn btn-primary\" @click=\"register()\">Register\n                </button>\n                <button style=\"margin-right: 1em; float: right\" type=\"button\" class=\"btn btn-warning\"\n                        onclick=\"window.history.back()\">Back\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'Register',\n        data() {\n            return {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                password: \"\"\n            }\n        },\n        methods: {\n            checkForm: function (e) {\n                this.errors = [];\n\n                if (!this.name) {\n                    this.errors.push(\"Name required.\");\n                }\n                if (!this.email) {\n                    this.errors.push('Email required.');\n                } else if (!this.validEmail(this.email)) {\n                    this.errors.push('Valid email required.');\n                }\n\n                if (!this.errors.length) {\n                    return true;\n                }\n\n                e.preventDefault();\n            },\n            validEmail: function (email) {\n                const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                return re.test(email);\n            },\n            register() {\n                this.$store.dispatch('registerUser', {\n                    firstName: this.firstName,\n                    lastName: this.lastName,\n                    email: this.email,\n                    password: this.password\n                })\n                    .then(() => {\n                        this.$router.push({name: 'login'})\n                    })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #register {\n        position: fixed;\n        top: 10%;\n        left: 11%;\n        width: 50%;\n        border: 1px solid grey;\n        background-color: #FFFFFF;\n        margin: 10em;\n        padding: 20px;\n    }\n\n    input {\n        margin-bottom: 1em;\n    }\n</style>"]}]}